//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Rsoevent = newRsoeventTable("cew", "rsoevent", "")

type rsoeventTable struct {
	postgres.Table

	// Columns
	ID    postgres.ColumnString
	RsoID postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type RsoeventTable struct {
	rsoeventTable

	EXCLUDED rsoeventTable
}

// AS creates new RsoeventTable with assigned alias
func (a RsoeventTable) AS(alias string) *RsoeventTable {
	return newRsoeventTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new RsoeventTable with assigned schema name
func (a RsoeventTable) FromSchema(schemaName string) *RsoeventTable {
	return newRsoeventTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new RsoeventTable with assigned table prefix
func (a RsoeventTable) WithPrefix(prefix string) *RsoeventTable {
	return newRsoeventTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new RsoeventTable with assigned table suffix
func (a RsoeventTable) WithSuffix(suffix string) *RsoeventTable {
	return newRsoeventTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newRsoeventTable(schemaName, tableName, alias string) *RsoeventTable {
	return &RsoeventTable{
		rsoeventTable: newRsoeventTableImpl(schemaName, tableName, alias),
		EXCLUDED:      newRsoeventTableImpl("", "excluded", ""),
	}
}

func newRsoeventTableImpl(schemaName, tableName, alias string) rsoeventTable {
	var (
		IDColumn       = postgres.StringColumn("id")
		RsoIDColumn    = postgres.StringColumn("rso_id")
		allColumns     = postgres.ColumnList{IDColumn, RsoIDColumn}
		mutableColumns = postgres.ColumnList{RsoIDColumn}
	)

	return rsoeventTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:    IDColumn,
		RsoID: RsoIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
