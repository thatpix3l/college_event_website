//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var University = newUniversityTable("cew", "university", "")

type universityTable struct {
	postgres.Table

	// Columns
	ID    postgres.ColumnString
	Title postgres.ColumnString
	About postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type UniversityTable struct {
	universityTable

	EXCLUDED universityTable
}

// AS creates new UniversityTable with assigned alias
func (a UniversityTable) AS(alias string) *UniversityTable {
	return newUniversityTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new UniversityTable with assigned schema name
func (a UniversityTable) FromSchema(schemaName string) *UniversityTable {
	return newUniversityTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new UniversityTable with assigned table prefix
func (a UniversityTable) WithPrefix(prefix string) *UniversityTable {
	return newUniversityTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new UniversityTable with assigned table suffix
func (a UniversityTable) WithSuffix(suffix string) *UniversityTable {
	return newUniversityTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newUniversityTable(schemaName, tableName, alias string) *UniversityTable {
	return &UniversityTable{
		universityTable: newUniversityTableImpl(schemaName, tableName, alias),
		EXCLUDED:        newUniversityTableImpl("", "excluded", ""),
	}
}

func newUniversityTableImpl(schemaName, tableName, alias string) universityTable {
	var (
		IDColumn       = postgres.StringColumn("id")
		TitleColumn    = postgres.StringColumn("title")
		AboutColumn    = postgres.StringColumn("about")
		allColumns     = postgres.ColumnList{IDColumn, TitleColumn, AboutColumn}
		mutableColumns = postgres.ColumnList{TitleColumn, AboutColumn}
	)

	return universityTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:    IDColumn,
		Title: TitleColumn,
		About: AboutColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
