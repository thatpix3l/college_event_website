CREATE TABLE University (
    id VARCHAR PRIMARY KEY DEFAULT gen_random_uuid()::VARCHAR,
    title VARCHAR NOT NULL,
    latitude FLOAT NOT NULL,
    longitude FLOAT NOT NULL,
    about VARCHAR NOT NULL
);
CREATE TABLE BaseUser(
    id VARCHAR PRIMARY KEY DEFAULT gen_random_uuid()::VARCHAR,
    name_first VARCHAR NOT NULL,
    name_last VARCHAR NOT NULL,
    email VARCHAR NOT NULL,
    password_hash VARCHAR NOT NULL,
    is_super_admin BOOLEAN NOT NULL DEFAULT FALSE,
    university VARCHAR REFERENCES University(id) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE Rso (
    id VARCHAR PRIMARY KEY DEFAULT gen_random_uuid()::VARCHAR,
    title VARCHAR NOT NULL,
    about VARCHAR NOT NULL,
    university VARCHAR NOT NULL REFERENCES University(id) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE RsoMember (
    id VARCHAR NOT NULL REFERENCES BaseUser(id) ON UPDATE CASCADE ON DELETE CASCADE,
    rso VARCHAR NOT NULL REFERENCES Rso(id) ON UPDATE CASCADE ON DELETE CASCADE,
    is_admin BOOLEAN NOT NULL DEFAULT FALSE,
    PRIMARY KEY (rso, id)
);
CREATE TABLE BaseEvent (
    id VARCHAR PRIMARY KEY DEFAULT gen_random_uuid()::VARCHAR,
    title VARCHAR NOT NULL,
    about VARCHAR NOT NULL,
    university VARCHAR NOT NULL REFERENCES University(id) ON UPDATE CASCADE ON DELETE CASCADE,
    start_time TIMESTAMP NOT NULL,
    contact_phone VARCHAR NOT NULL,
    contact_email VARCHAR NOT NULL,
    event_type VARCHAR NOT NULL REFERENCES Rso(id) ON UPDATE CASCADE ON DELETE CASCADE CHECK (
        event_type = 'public'
        OR event_type = 'private'
    ),
    public_approved BOOLEAN NOT NULL DEFAULT FALSE,
    latitude FLOAT NOT NULL,
    longitude FLOAT NOT NULL
);
CREATE TABLE Tag (
    id VARCHAR PRIMARY KEY DEFAULT gen_random_uuid()::VARCHAR,
    title VARCHAR NOT NULL
);
CREATE TABLE TaggedEvent (
    tag VARCHAR NOT NULL REFERENCES Tag(id) ON UPDATE CASCADE ON DELETE CASCADE,
    base_event VARCHAR NOT NULL REFERENCES BaseEvent(id) ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY (tag, base_event)
);
CREATE TABLE TaggedRso (
    tag VARCHAR NOT NULL REFERENCES Tag(id) ON UPDATE CASCADE ON DELETE CASCADE,
    rso VARCHAR NOT NULL REFERENCES Rso(id) ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY (tag, rso)
);
CREATE TABLE Comment (
    id VARCHAR PRIMARY KEY DEFAULT gen_random_uuid()::VARCHAR,
    body VARCHAR NOT NULL,
    posted_by VARCHAR REFERENCES BaseUser(id) ON UPDATE CASCADE ON DELETE
    SET NULL,
        base_event VARCHAR NOT NULL REFERENCES BaseEvent(id) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE Rating (
    id VARCHAR PRIMARY KEY DEFAULT gen_random_uuid()::VARCHAR,
    stars INTEGER NOT NULL CHECK (
        stars > 0
        AND stars <= 5
    ),
    posted_by VARCHAR REFERENCES BaseUser(id) ON UPDATE CASCADE ON DELETE
    SET NULL,
        base_event VARCHAR NOT NULL REFERENCES BaseEvent(id) ON UPDATE CASCADE ON DELETE CASCADE
);