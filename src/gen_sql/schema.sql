CREATE TABLE Coordinate(
    id SERIAL PRIMARY KEY,
    title VARCHAR NOT NULL,
    latitude FLOAT NOT NULL,
    longitude FLOAT NOT NULL,
    UNIQUE (latitude, longitude)
);
CREATE TABLE University (
    id SERIAL PRIMARY KEY,
    title VARCHAR NOT NULL,
    coordinate INTEGER NOT NULL REFERENCES Coordinate(id) ON UPDATE CASCADE,
    about VARCHAR NOT NULL
);
CREATE TABLE UniversityMember(
    id SERIAL PRIMARY KEY,
    university INTEGER NOT NULL REFERENCES University(id) ON UPDATE CASCADE ON DELETE CASCADE,
    name_first VARCHAR NOT NULL,
    name_middle VARCHAR NOT NULL,
    name_last VARCHAR NOT NULL,
    email VARCHAR NOT NULL,
    password_hash VARCHAR NOT NULL UNIQUE
);
CREATE TABLE SuperAdmin(
    id INTEGER PRIMARY KEY REFERENCES UniversityMember(id) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE UniversityEvent (
    id SERIAL PRIMARY KEY,
    title VARCHAR NOT NULL,
    body VARCHAR NOT NULL,
    university INTEGER NOT NULL REFERENCES University(id) ON UPDATE CASCADE ON DELETE CASCADE,
    occurrence_time TIMESTAMP NOT NULL,
    occurrence_location INTEGER NOT NULL REFERENCES Coordinate(id) ON UPDATE CASCADE,
    contact_phone VARCHAR NOT NULL,
    contact_email VARCHAR NOT NULL
);
CREATE TABLE PublicEvent (
    id INTEGER PRIMARY KEY REFERENCES UniversityEvent(id) ON UPDATE CASCADE ON DELETE CASCADE,
    approved BOOLEAN NOT NULL DEFAULT FALSE
);
CREATE TABLE PrivateEvent (
    id INTEGER PRIMARY KEY REFERENCES UniversityEvent(id) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE Rso (
    id SERIAL PRIMARY KEY,
    title VARCHAR NOT NULL,
    university INTEGER NOT NULL REFERENCES University(id) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE RsoEvent (
    id INTEGER PRIMARY KEY REFERENCES UniversityEvent(id) ON UPDATE CASCADE ON DELETE CASCADE,
    rso INTEGER NOT NULL REFERENCES Rso(id) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE Tag (
    id SERIAL PRIMARY KEY,
    title VARCHAR NOT NULL
);
CREATE TABLE TaggedEvent (
    tag INTEGER NOT NULL REFERENCES Tag(id) ON UPDATE CASCADE ON DELETE CASCADE,
    university_event INTEGER NOT NULL REFERENCES UniversityEvent(id) ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY (tag, university_event)
);
CREATE TABLE TaggedRso (
    tag INTEGER NOT NULL REFERENCES Tag(id) ON UPDATE CASCADE ON DELETE CASCADE,
    rso INTEGER NOT NULL REFERENCES Rso(id) ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY (tag, rso)
);
CREATE TABLE RsoMember (
    rso INTEGER NOT NULL REFERENCES Rso(id) ON UPDATE CASCADE ON DELETE CASCADE,
    university_member INTEGER NOT NULL REFERENCES UniversityMember(id) ON UPDATE CASCADE ON DELETE CASCADE,
    is_admin BOOLEAN NOT NULL DEFAULT FALSE,
    PRIMARY KEY (rso, university_member)
);
CREATE TABLE Comment (
    id SERIAL PRIMARY KEY,
    body VARCHAR NOT NULL,
    posted_by INTEGER REFERENCES UniversityMember(id) ON UPDATE CASCADE ON DELETE
    SET NULL,
        university_event INTEGER NOT NULL REFERENCES UniversityEvent(id) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE Rating (
    id SERIAL PRIMARY KEY,
    stars INTEGER NOT NULL,
    posted_by INTEGER REFERENCES UniversityMember(id) ON UPDATE CASCADE ON DELETE
    SET NULL,
        university_event INTEGER NOT NULL REFERENCES UniversityEvent(id) ON UPDATE CASCADE ON DELETE CASCADE
);